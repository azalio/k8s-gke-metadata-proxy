apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "meta-proxy.fullname" . }}
  labels:
    {{- include "meta-proxy.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "meta-proxy.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "meta-proxy.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "meta-proxy.serviceAccountName" . }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
{{- end }}
      initContainers:
          - command: 
            - iptables
            args:
            - -t 
            - nat
            - -I
            - PREROUTING
            - "1"
            - -p
            - tcp
            - -d
            - 169.254.169.254
            - --dport
            - "80"
            - -j
            - DNAT
            - --to-destination
            - "127.0.0.1:988"
#            - -m
#            - --comment
#            - "DNAT trafic to meta-proxy"
            image: soarinferret/iptablesproxy
            imagePullPolicy: IfNotPresent
            name: {{ .Chart.Name }}-set-iptables-rules
            resources:
              limits:
                cpu: 100m
                memory: 50Mi
              requests:
                cpu: 10m
                memory: 10Mi
            securityContext:
              privileged: true
              readOnlyRootFilesystem: false
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File 
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        {{- with .Values.securityContext }}
        securityContext:
{{ toYaml . | indent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- if .Values.args }}
        args:
{{ toYaml .Values.args | indent 8 }}
        {{- end }}
        {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      hostNetwork: {{ default false .Values.hostNetwork }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
      {{- end }}
